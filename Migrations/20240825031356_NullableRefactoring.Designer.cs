// <auto-generated />
using System;
using Kanawanagasaki.TwitchHub;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Kanawanagasaki.TwitchHub.Migrations
{
    [DbContext(typeof(SQLiteContext))]
    [Migration("20240825031356_NullableRefactoring")]
    partial class NullableRefactoring
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.7");

            modelBuilder.Entity("Kanawanagasaki.TwitchHub.Models.JsAfkCodeModel", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Channel")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("InitCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SymbolTickCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TickCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Uuid");

                    b.ToTable("js_afk_code_model");
                });

            modelBuilder.Entity("Kanawanagasaki.TwitchHub.Models.SettingModel", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Uuid");

                    b.HasIndex("Key");

                    b.ToTable("setting");
                });

            modelBuilder.Entity("Kanawanagasaki.TwitchHub.Models.TextCommandModel", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Uuid");

                    b.ToTable("text_command");
                });

            modelBuilder.Entity("Kanawanagasaki.TwitchHub.Models.TwitchAuthModel", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("AccessToken")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("ExpiresAt")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsValid")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Uuid");

                    b.ToTable("twitch_auth");
                });

            modelBuilder.Entity("Kanawanagasaki.TwitchHub.Models.TwitchCustomRewardModel", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("AuthUuid")
                        .HasColumnType("TEXT");

                    b.Property<string>("BackgroundColor")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("BotAuthUuid")
                        .HasColumnType("TEXT");

                    b.Property<int>("Cost")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Extra")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsCreated")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsUserInputRequired")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Prompt")
                        .HasColumnType("TEXT");

                    b.Property<int>("RewardType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TwitchId")
                        .HasColumnType("TEXT");

                    b.HasKey("Uuid");

                    b.HasIndex("AuthUuid");

                    b.HasIndex("TwitchId");

                    b.ToTable("twitch_custom_reward");
                });

            modelBuilder.Entity("Kanawanagasaki.TwitchHub.Models.ViewerVoice", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("Pitch")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Rate")
                        .HasColumnType("REAL");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("VoiceName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Uuid");

                    b.ToTable("viewer_voice");
                });
#pragma warning restore 612, 618
        }
    }
}
